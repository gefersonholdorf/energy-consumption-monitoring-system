// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  enterprise String
  devices   Device[] 
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("user")
}

model Device {
  id          Int              @id @default(autoincrement())
  name        String
  serialNumber String          @unique 
  model       String
  location    String           // Ex: "Sala", "Escritório", "Indústria"
  status      DeviceStatus     @default(INACTIVE)
  userId      Int           
  user        User             @relation(fields: [userId], references: [id])
  consumptions Consumption[]   // Relacionamento com os registros de consumo
  alerts Alert[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@map("device")
}

enum DeviceStatus {
  ACTIVE
  INACTIVE
  DISCONNECTED
}

model Consumption {
  id          Int       @id @default(autoincrement())
  deviceId    Int
  device      Device    @relation(fields: [deviceId], references: [id])
  powerUsage  Float     // Consumo em watts (W)
  voltage     Float     // Tensão em volts (V)
  current     Float     // Corrente em amperes (A)
  timestamp   DateTime  @default(now()) // Data e hora da leitura

  @@map("consumption")
}

model Alert {
  id          Int       @id @default(autoincrement())
  deviceId    Int
  device      Device    @relation(fields: [deviceId], references: [id])
  message     String
  severity    AlertSeverity  // Nível do alerta
  resolved    Boolean   @default(false)
  createdAt   DateTime  @default(now())

  @@map("alert")
}

enum AlertSeverity {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

